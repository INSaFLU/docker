version: '3.4'

### places where the most important data is
volumes:

  pg_data:
    driver: local-persist
    driver_opts:
      mountpoint: ${BASE_PATH_DATA}/postgres/postgres_data
  pgbackups:
    driver: local-persist
    driver_opts:
      mountpoint: ${BASE_PATH_DATA}/postgres/backups
  insaflu-server-data:
    driver: local-persist
    driver_opts:
      mountpoint: ${BASE_PATH_DATA}/insaflu/data/all_data
  insaflu-server-predefined_dbs:
    driver: local-persist
    driver_opts:
      mountpoint: ${BASE_PATH_DATA}/insaflu/data/predefined_dbs
  insaflu-server-env:
    driver: local-persist
    driver_opts:
      mountpoint: ${BASE_PATH_DATA}/insaflu/env
  insaflu-server-log-insaflu:
    driver: local-persist
    driver_opts:
      mountpoint: ${BASE_PATH_DATA}/insaflu/log/insaFlu
  insaflu-server-log-httpd:
    driver: local-persist
    driver_opts:
      mountpoint: ${BASE_PATH_DATA}/insaflu/log/httpd
  televir:
    driver: local-persist
    driver_opts:
      mountpoint: ${BASE_PATH_DATA}/televir/
### this is necessary to set an ip to SGE in insaflu
networks:
  insaflu_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.1.0.0/24

services:
  # DB for Insaflu
  # test database - psql -U flu_user -W -h localhost -d insaflu_db
  db_insaflu:
    build: components/postgres_postgis/.
    restart: always
    container_name: postgres
    hostname: db_insaflu
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "flu_user"
      POSTGRES_PASSWORD: "flu_user_pass"
      POSTGRES_DB: "insaflu_db"
      PGDATA: /var/lib/postgresql/data/pgdata
    expose:
      - 5432
    networks:
      insaflu_net:
        ipv4_address: 10.1.0.2

  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    container_name: postgres_backup
    hostname: insaflu_backup
    volumes:
      - pgbackups:/backups
    depends_on:
      - db_insaflu
    environment:
      POSTGRES_HOST: "insaflu_db"
      POSTGRES_DB: "insaflu_db"
      POSTGRES_USER: "flu_user"
      POSTGRES_PASSWORD: "flu_user_pass"
      POSTGRES_EXTRA_OPTS: "-Z9 --schema=public --blobs"
      SCHEDULE: "@daily"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
      HEALTHCHECK_PORT: 80
    networks:
      insaflu_net:
        ipv4_address: 10.1.0.3

  # responsible to m
  officer:
    image: funkyfuture/deck-chores:1
    restart: unless-stopped
    environment:
      TIMEZONE: "${TIMEZONE}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      
  # TELEVIR
  televir-server:
    build: components/televir/.
    container_name: televir-server
    image: ${USERNAME_IMAGE}:${TELEVIR_IMAGE}
    hostname: televir
    restart: on-failure
    volumes:
      - televir:/televir/mngs_benchmark
    depends_on:
      - pgbackups
      - officer
    environment:
      - SGE_ROOT=/opt/sge
    tty: true
    stdin_open: true
    networks:
      insaflu_net:
        ipv4_address: 10.1.0.5
    command: [ "move" ]
    
  # insaflu
  # password and database login are defined in components/insaflu/configs/insaflu.env 
  insaflu-server:
    build: components/insaflu-server/.
    container_name: insaflu-server
    image: ${USERNAME_IMAGE}:${IMAGE}
    hostname: insaflu
    restart: no
    volumes:
      - televir:/televir/mngs_benchmark    
      - insaflu-server-data:/insaflu_web/INSaFLU/media
      - insaflu-server-predefined_dbs:/insaflu_web/INSaFLU/static_all/db
      - insaflu-server-env:/insaflu_web/INSaFLU/env
      - insaflu-server-log-insaflu:/var/log/insaFlu
      - insaflu-server-log-httpd:/var/log/httpd
    labels:
      deck-chores.update-pangolin.command: sh -c "/software/update_pangolin.sh"
      # weekly, daily, hourly, every minute and every second.
      deck-chores.update-pangolin.interval: hourly
    depends_on:
      - db_insaflu
      - pgbackups
      - officer
    environment:
      - SGE_ROOT=/opt/sge
    ports:
      - "${APP_PORT}:80"
    tty: true
    stdin_open: true
    networks:
      insaflu_net:
        ipv4_address: 10.1.0.4
    command: [ "init_all" ]
